# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tasks/lib/doVisionWidget_v2.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_doVisionWidget(object):
    def setupUi(self, doVisionWidget):
        doVisionWidget.setObjectName("doVisionWidget")
        doVisionWidget.resize(341, 686)
        self.gridLayout = QtWidgets.QGridLayout(doVisionWidget)
        self.gridLayout.setObjectName("gridLayout")
        self.rtenabled = QtWidgets.QGroupBox(doVisionWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rtenabled.sizePolicy().hasHeightForWidth())
        self.rtenabled.setSizePolicy(sizePolicy)
        self.rtenabled.setMinimumSize(QtCore.QSize(0, 0))
        self.rtenabled.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.rtenabled.setFont(font)
        self.rtenabled.setCheckable(True)
        self.rtenabled.setObjectName("rtenabled")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.rtenabled)
        self.verticalLayout_7.setContentsMargins(-1, 0, 9, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.rtdetect = QtWidgets.QRadioButton(self.rtenabled)
        self.rtdetect.setObjectName("rtdetect")
        self.verticalLayout_7.addWidget(self.rtdetect)
        self.rtfilt = QtWidgets.QRadioButton(self.rtenabled)
        self.rtfilt.setObjectName("rtfilt")
        self.verticalLayout_7.addWidget(self.rtfilt)
        self.rtcrop = QtWidgets.QRadioButton(self.rtenabled)
        self.rtcrop.setObjectName("rtcrop")
        self.verticalLayout_7.addWidget(self.rtcrop)
        self.rtestimate = QtWidgets.QRadioButton(self.rtenabled)
        self.rtestimate.setObjectName("rtestimate")
        self.verticalLayout_7.addWidget(self.rtestimate)
        self.rtrefine = QtWidgets.QRadioButton(self.rtenabled)
        self.rtrefine.setMinimumSize(QtCore.QSize(0, 0))
        self.rtrefine.setObjectName("rtrefine")
        self.verticalLayout_7.addWidget(self.rtrefine)
        self.gridLayout.addWidget(self.rtenabled, 8, 0, 1, 1)
        self.ppenabled = QtWidgets.QGroupBox(doVisionWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ppenabled.sizePolicy().hasHeightForWidth())
        self.ppenabled.setSizePolicy(sizePolicy)
        self.ppenabled.setMinimumSize(QtCore.QSize(0, 0))
        self.ppenabled.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.ppenabled.setFont(font)
        self.ppenabled.setCheckable(True)
        self.ppenabled.setChecked(True)
        self.ppenabled.setObjectName("ppenabled")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.ppenabled)
        self.verticalLayout_8.setContentsMargins(-1, 0, 9, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.ppdetect = QtWidgets.QRadioButton(self.ppenabled)
        self.ppdetect.setChecked(False)
        self.ppdetect.setObjectName("ppdetect")
        self.verticalLayout_8.addWidget(self.ppdetect)
        self.ppfilt = QtWidgets.QRadioButton(self.ppenabled)
        self.ppfilt.setObjectName("ppfilt")
        self.verticalLayout_8.addWidget(self.ppfilt)
        self.ppcrop = QtWidgets.QRadioButton(self.ppenabled)
        self.ppcrop.setObjectName("ppcrop")
        self.verticalLayout_8.addWidget(self.ppcrop)
        self.ppestimate = QtWidgets.QRadioButton(self.ppenabled)
        self.ppestimate.setObjectName("ppestimate")
        self.verticalLayout_8.addWidget(self.ppestimate)
        self.pprefine = QtWidgets.QRadioButton(self.ppenabled)
        self.pprefine.setChecked(False)
        self.pprefine.setObjectName("pprefine")
        self.verticalLayout_8.addWidget(self.pprefine)
        self.gridLayout.addWidget(self.ppenabled, 8, 1, 1, 1)
        self.groupExport = QtWidgets.QGroupBox(doVisionWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupExport.sizePolicy().hasHeightForWidth())
        self.groupExport.setSizePolicy(sizePolicy)
        self.groupExport.setMaximumSize(QtCore.QSize(350, 16777215))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.groupExport.setFont(font)
        self.groupExport.setObjectName("groupExport")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupExport)
        self.gridLayout_2.setContentsMargins(6, 2, 2, 2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.SRC_showpath = QtWidgets.QLineEdit(self.groupExport)
        self.SRC_showpath.setEnabled(False)
        self.SRC_showpath.setObjectName("SRC_showpath")
        self.gridLayout_2.addWidget(self.SRC_showpath, 1, 1, 1, 2)
        self.SRCsaveFrames = QtWidgets.QCheckBox(self.groupExport)
        self.SRCsaveFrames.setChecked(False)
        self.SRCsaveFrames.setTristate(False)
        self.SRCsaveFrames.setObjectName("SRCsaveFrames")
        self.gridLayout_2.addWidget(self.SRCsaveFrames, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.groupExport)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 1, 0, 1, 1)
        self.SRCsaveFeatureData = QtWidgets.QCheckBox(self.groupExport)
        self.SRCsaveFeatureData.setObjectName("SRCsaveFeatureData")
        self.gridLayout_2.addWidget(self.SRCsaveFeatureData, 0, 1, 1, 1)
        self.SRCsaveTrajectories = QtWidgets.QCheckBox(self.groupExport)
        self.SRCsaveTrajectories.setObjectName("SRCsaveTrajectories")
        self.gridLayout_2.addWidget(self.SRCsaveTrajectories, 0, 2, 1, 1)
        self.bsave = QtWidgets.QPushButton(self.groupExport)
        self.bsave.setObjectName("bsave")
        self.gridLayout_2.addWidget(self.bsave, 2, 0, 1, 1)
        self.gridLayout.addWidget(self.groupExport, 1, 0, 1, 2)
        self.groupDetect = QtWidgets.QGroupBox(doVisionWidget)
        self.groupDetect.setMaximumSize(QtCore.QSize(16777215, 104))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.groupDetect.setFont(font)
        self.groupDetect.setObjectName("groupDetect")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupDetect)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setHorizontalSpacing(2)
        self.gridLayout_5.setVerticalSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.LOCthreshold = QtWidgets.QDoubleSpinBox(self.groupDetect)
        self.LOCthreshold.setSuffix("")
        self.LOCthreshold.setDecimals(2)
        self.LOCthreshold.setMinimum(0.0)
        self.LOCthreshold.setMaximum(1.0)
        self.LOCthreshold.setSingleStep(0.01)
        self.LOCthreshold.setProperty("value", 0.5)
        self.LOCthreshold.setObjectName("LOCthreshold")
        self.gridLayout_5.addWidget(self.LOCthreshold, 2, 1, 1, 1)
        self.LOCsearchRange = QtWidgets.QDoubleSpinBox(self.groupDetect)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LOCsearchRange.sizePolicy().hasHeightForWidth())
        self.LOCsearchRange.setSizePolicy(sizePolicy)
        self.LOCsearchRange.setPrefix("")
        self.LOCsearchRange.setDecimals(1)
        self.LOCsearchRange.setProperty("value", 5.0)
        self.LOCsearchRange.setObjectName("LOCsearchRange")
        self.gridLayout_5.addWidget(self.LOCsearchRange, 4, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.groupDetect)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_5.addWidget(self.label_3, 4, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.groupDetect)
        self.label_8.setObjectName("label_8")
        self.gridLayout_5.addWidget(self.label_8, 3, 0, 1, 1)
        self.LOCmaxSize = QtWidgets.QSpinBox(self.groupDetect)
        self.LOCmaxSize.setMinimum(0)
        self.LOCmaxSize.setMaximum(100000)
        self.LOCmaxSize.setSingleStep(5)
        self.LOCmaxSize.setProperty("value", 600)
        self.LOCmaxSize.setDisplayIntegerBase(10)
        self.LOCmaxSize.setObjectName("LOCmaxSize")
        self.gridLayout_5.addWidget(self.LOCmaxSize, 3, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.groupDetect)
        self.label_7.setObjectName("label_7")
        self.gridLayout_5.addWidget(self.label_7, 2, 0, 1, 1)
        self.gridLayout.addWidget(self.groupDetect, 9, 0, 1, 2)
        self.bstop = QtWidgets.QPushButton(doVisionWidget)
        self.bstop.setEnabled(False)
        self.bstop.setObjectName("bstop")
        self.gridLayout.addWidget(self.bstop, 7, 1, 1, 1)
        self.bstart = QtWidgets.QPushButton(doVisionWidget)
        self.bstart.setObjectName("bstart")
        self.gridLayout.addWidget(self.bstart, 7, 0, 1, 1)
        self.groupFilter = QtWidgets.QGroupBox(doVisionWidget)
        self.groupFilter.setMaximumSize(QtCore.QSize(16777215, 78))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.groupFilter.setFont(font)
        self.groupFilter.setCheckable(False)
        self.groupFilter.setObjectName("groupFilter")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupFilter)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setHorizontalSpacing(2)
        self.gridLayout_8.setVerticalSpacing(0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_10 = QtWidgets.QLabel(self.groupFilter)
        self.label_10.setObjectName("label_10")
        self.gridLayout_8.addWidget(self.label_10, 3, 1, 1, 1)
        self.doublestol = QtWidgets.QSpinBox(self.groupFilter)
        self.doublestol.setMinimum(0)
        self.doublestol.setMaximum(100000)
        self.doublestol.setSingleStep(5)
        self.doublestol.setProperty("value", 600)
        self.doublestol.setDisplayIntegerBase(10)
        self.doublestol.setObjectName("doublestol")
        self.gridLayout_8.addWidget(self.doublestol, 3, 2, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupFilter)
        self.label_9.setObjectName("label_9")
        self.gridLayout_8.addWidget(self.label_9, 2, 1, 1, 1)
        self.doNoEdges = QtWidgets.QCheckBox(self.groupFilter)
        self.doNoEdges.setMaximumSize(QtCore.QSize(20, 16777215))
        self.doNoEdges.setText("")
        self.doNoEdges.setObjectName("doNoEdges")
        self.gridLayout_8.addWidget(self.doNoEdges, 2, 0, 1, 1)
        self.doNoDoubles = QtWidgets.QCheckBox(self.groupFilter)
        self.doNoDoubles.setMaximumSize(QtCore.QSize(20, 16777215))
        self.doNoDoubles.setText("")
        self.doNoDoubles.setObjectName("doNoDoubles")
        self.gridLayout_8.addWidget(self.doNoDoubles, 3, 0, 1, 1)
        self.edgetol = QtWidgets.QSpinBox(self.groupFilter)
        self.edgetol.setPrefix("")
        self.edgetol.setMinimum(50)
        self.edgetol.setMaximum(100000)
        self.edgetol.setObjectName("edgetol")
        self.gridLayout_8.addWidget(self.edgetol, 2, 2, 1, 1)
        self.gridLayout.addWidget(self.groupFilter, 10, 0, 1, 2)
        self.SRC_paused = QtWidgets.QCheckBox(doVisionWidget)
        self.SRC_paused.setChecked(False)
        self.SRC_paused.setObjectName("SRC_paused")
        self.gridLayout.addWidget(self.SRC_paused, 3, 0, 1, 1)
        self.groupRecording = QtWidgets.QGroupBox(doVisionWidget)
        self.groupRecording.setMaximumSize(QtCore.QSize(350, 16777215))
        self.groupRecording.setObjectName("groupRecording")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupRecording)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setHorizontalSpacing(2)
        self.gridLayout_6.setVerticalSpacing(0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.nframes = QtWidgets.QSpinBox(self.groupRecording)
        self.nframes.setMaximumSize(QtCore.QSize(100, 16777215))
        self.nframes.setFrame(True)
        self.nframes.setMinimum(1)
        self.nframes.setMaximum(100000)
        self.nframes.setProperty("value", 100)
        self.nframes.setObjectName("nframes")
        self.gridLayout_6.addWidget(self.nframes, 0, 1, 1, 1)
        self.skip = QtWidgets.QSpinBox(self.groupRecording)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.skip.sizePolicy().hasHeightForWidth())
        self.skip.setSizePolicy(sizePolicy)
        self.skip.setMaximumSize(QtCore.QSize(100, 16777215))
        self.skip.setMinimum(1)
        self.skip.setProperty("value", 1)
        self.skip.setObjectName("skip")
        self.gridLayout_6.addWidget(self.skip, 3, 1, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.groupRecording)
        self.label_14.setObjectName("label_14")
        self.gridLayout_6.addWidget(self.label_14, 2, 0, 1, 1)
        self.SRCskip = QtWidgets.QSpinBox(self.groupRecording)
        self.SRCskip.setMaximumSize(QtCore.QSize(100, 16777215))
        self.SRCskip.setMinimum(1)
        self.SRCskip.setProperty("value", 5)
        self.SRCskip.setObjectName("SRCskip")
        self.gridLayout_6.addWidget(self.SRCskip, 2, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.groupRecording)
        self.label_13.setObjectName("label_13")
        self.gridLayout_6.addWidget(self.label_13, 3, 0, 1, 1)
        self.continuous = QtWidgets.QCheckBox(self.groupRecording)
        self.continuous.setChecked(False)
        self.continuous.setObjectName("continuous")
        self.gridLayout_6.addWidget(self.continuous, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupRecording)
        self.label_2.setObjectName("label_2")
        self.gridLayout_6.addWidget(self.label_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.groupRecording, 0, 0, 1, 2)
        self._paused = QtWidgets.QCheckBox(doVisionWidget)
        self._paused.setObjectName("_paused")
        self.gridLayout.addWidget(self._paused, 3, 1, 1, 1)

        self.retranslateUi(doVisionWidget)
        QtCore.QMetaObject.connectSlotsByName(doVisionWidget)

    def retranslateUi(self, doVisionWidget):
        _translate = QtCore.QCoreApplication.translate
        doVisionWidget.setWindowTitle(_translate("doVisionWidget", "Form"))
        self.rtenabled.setTitle(_translate("doVisionWidget", "Real Time"))
        self.rtdetect.setStatusTip(_translate("doVisionWidget", "Deep neural network (x, y) feature detection"))
        self.rtdetect.setText(_translate("doVisionWidget", "Detect"))
        self.rtfilt.setStatusTip(_translate("doVisionWidget", "Deep neural network (x, y) feature detection"))
        self.rtfilt.setText(_translate("doVisionWidget", "Filter"))
        self.rtcrop.setText(_translate("doVisionWidget", "Crop Features"))
        self.rtestimate.setStatusTip(_translate("doVisionWidget", "Deep neural network (x, y, z) feature detection and holographic characterization"))
        self.rtestimate.setText(_translate("doVisionWidget", "Estimate"))
        self.rtrefine.setStatusTip(_translate("doVisionWidget", "Deep neural network pipeline with precision holographic characterization"))
        self.rtrefine.setText(_translate("doVisionWidget", "Refine"))
        self.ppenabled.setTitle(_translate("doVisionWidget", "Post-Process"))
        self.ppdetect.setStatusTip(_translate("doVisionWidget", "Deep neural network (x, y) feature detection"))
        self.ppdetect.setText(_translate("doVisionWidget", "Detect"))
        self.ppfilt.setText(_translate("doVisionWidget", "Filter"))
        self.ppcrop.setText(_translate("doVisionWidget", "Crop Features"))
        self.ppestimate.setStatusTip(_translate("doVisionWidget", "Deep neural network (x, y, z) feature detection and holographic characterization"))
        self.ppestimate.setText(_translate("doVisionWidget", "Estimate"))
        self.pprefine.setStatusTip(_translate("doVisionWidget", "Deep neural network pipeline with precision holographic characterization"))
        self.pprefine.setText(_translate("doVisionWidget", "Refine"))
        self.groupExport.setStatusTip(_translate("doVisionWidget", "See https://github.com/davidgrier/pylorenzmie for Video, Frame, Trajectory, and Feature documentation"))
        self.groupExport.setTitle(_translate("doVisionWidget", "Save"))
        self.SRCsaveFrames.setStatusTip(_translate("doVisionWidget", "Export Frames from video recordings"))
        self.SRCsaveFrames.setText(_translate("doVisionWidget", "Frames"))
        self.label.setText(_translate("doVisionWidget", "path"))
        self.SRCsaveFeatureData.setStatusTip(_translate("doVisionWidget", "Save cropped Feature data when exporting Frames and/or Trajectories"))
        self.SRCsaveFeatureData.setText(_translate("doVisionWidget", "Feature data"))
        self.SRCsaveTrajectories.setStatusTip(_translate("doVisionWidget", "Export Trajectories from video recordings"))
        self.SRCsaveTrajectories.setText(_translate("doVisionWidget", "Trajectories"))
        self.bsave.setText(_translate("doVisionWidget", "Save"))
        self.groupDetect.setTitle(_translate("doVisionWidget", "Detection"))
        self.LOCthreshold.setStatusTip(_translate("doVisionWidget", "Confidence threshold for detections. Throw away features detected below this confidence."))
        self.LOCsearchRange.setStatusTip(_translate("doVisionWidget", "Maximum distance features can move between frames in order to be linked to the same Trajectory."))
        self.LOCsearchRange.setSuffix(_translate("doVisionWidget", " pixels"))
        self.label_3.setStatusTip(_translate("doVisionWidget", "Maximum distance features can move between frames in order to be linked to the same Trajectory"))
        self.label_3.setText(_translate("doVisionWidget", "Search range"))
        self.label_8.setStatusTip(_translate("doVisionWidget", "Maximum edge length that is considered a detection. Useful for real-time processing and eliminating artifacts."))
        self.label_8.setText(_translate("doVisionWidget", "Max size"))
        self.LOCmaxSize.setStatusTip(_translate("doVisionWidget", "Maximum edge length that is considered a detection. Useful for real-time processing and eliminating artifacts."))
        self.LOCmaxSize.setSuffix(_translate("doVisionWidget", " pixels"))
        self.label_7.setStatusTip(_translate("doVisionWidget", "Confidence threshold for detections. Throw away features detected below this confidence."))
        self.label_7.setText(_translate("doVisionWidget", "Confidence"))
        self.bstop.setText(_translate("doVisionWidget", "Stop Tracking"))
        self.bstart.setText(_translate("doVisionWidget", "Start Tracking"))
        self.groupFilter.setTitle(_translate("doVisionWidget", "Filtering"))
        self.label_10.setStatusTip(_translate("doVisionWidget", "Maximum edge length that is considered a detection. Useful for real-time processing and eliminating artifacts."))
        self.label_10.setText(_translate("doVisionWidget", "Doubles Tol"))
        self.doublestol.setStatusTip(_translate("doVisionWidget", "Maximum edge length that is considered a detection. Useful for real-time processing and eliminating artifacts."))
        self.doublestol.setSuffix(_translate("doVisionWidget", " pixels"))
        self.label_9.setStatusTip(_translate("doVisionWidget", "Confidence threshold for detections. Throw away features detected below this confidence."))
        self.label_9.setText(_translate("doVisionWidget", "Edge Tol"))
        self.edgetol.setStatusTip(_translate("doVisionWidget", "Confidence threshold for detections. Throw away features detected below this confidence."))
        self.edgetol.setSuffix(_translate("doVisionWidget", " pixels"))
        self.SRC_paused.setText(_translate("doVisionWidget", "Recording Paused"))
        self.groupRecording.setTitle(_translate("doVisionWidget", "Recording Settings"))
        self.nframes.setSpecialValueText(_translate("doVisionWidget", "1 frame"))
        self.nframes.setSuffix(_translate("doVisionWidget", " frames"))
        self.skip.setSpecialValueText(_translate("doVisionWidget", "1 frame"))
        self.skip.setSuffix(_translate("doVisionWidget", " frames"))
        self.label_14.setText(_translate("doVisionWidget", "Recording skip"))
        self.SRCskip.setSpecialValueText(_translate("doVisionWidget", "1 frame"))
        self.SRCskip.setSuffix(_translate("doVisionWidget", " frames"))
        self.label_13.setText(_translate("doVisionWidget", "Real-Time skip"))
        self.continuous.setText(_translate("doVisionWidget", "continuous"))
        self.label_2.setText(_translate("doVisionWidget", "nframes"))
        self._paused.setText(_translate("doVisionWidget", "Real-Time Paused"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    doVisionWidget = QtWidgets.QWidget()
    ui = Ui_doVisionWidget()
    ui.setupUi(doVisionWidget)
    doVisionWidget.show()
    sys.exit(app.exec_())

