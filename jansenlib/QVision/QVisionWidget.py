# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QVisionWidget.ui'
#
# Created by: PyQt5 UI code generator 5.9
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_QVisionWidget(object):
    def setupUi(self, QVisionWidget):
        QVisionWidget.setObjectName("QVisionWidget")
        QVisionWidget.setEnabled(True)
        QVisionWidget.resize(600, 742)
        self.verticalLayout = QtWidgets.QVBoxLayout(QVisionWidget)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setSpacing(2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupProcess = QtWidgets.QGroupBox(QVisionWidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.groupProcess.setFont(font)
        self.groupProcess.setObjectName("groupProcess")
        self.gridLayout = QtWidgets.QGridLayout(self.groupProcess)
        self.gridLayout.setContentsMargins(6, 2, 2, 2)
        self.gridLayout.setHorizontalSpacing(20)
        self.gridLayout.setVerticalSpacing(2)
        self.gridLayout.setObjectName("gridLayout")
        self.label_2 = QtWidgets.QLabel(self.groupProcess)
        self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.nskip = QtWidgets.QSpinBox(self.groupProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nskip.sizePolicy().hasHeightForWidth())
        self.nskip.setSizePolicy(sizePolicy)
        self.nskip.setWhatsThis("")
        self.nskip.setPrefix("")
        self.nskip.setMaximum(1000)
        self.nskip.setProperty("value", 5)
        self.nskip.setObjectName("nskip")
        self.gridLayout.addWidget(self.nskip, 2, 1, 1, 1)
        self.realTime = QtWidgets.QRadioButton(self.groupProcess)
        self.realTime.setToolTip("")
        self.realTime.setWhatsThis("")
        self.realTime.setObjectName("realTime")
        self.gridLayout.addWidget(self.realTime, 1, 0, 1, 1)
        self.postProcess = QtWidgets.QRadioButton(self.groupProcess)
        self.postProcess.setToolTip("")
        self.postProcess.setWhatsThis("")
        self.postProcess.setChecked(True)
        self.postProcess.setObjectName("postProcess")
        self.gridLayout.addWidget(self.postProcess, 1, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.groupProcess)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 4, 0, 1, 1)
        self.confidence = QtWidgets.QDoubleSpinBox(self.groupProcess)
        self.confidence.setDecimals(1)
        self.confidence.setMinimum(5.0)
        self.confidence.setMaximum(100.0)
        self.confidence.setProperty("value", 50.0)
        self.confidence.setObjectName("confidence")
        self.gridLayout.addWidget(self.confidence, 4, 1, 1, 1)
        self.maxSize = QtWidgets.QSpinBox(self.groupProcess)
        self.maxSize.setMinimum(0)
        self.maxSize.setMaximum(100000)
        self.maxSize.setSingleStep(5)
        self.maxSize.setProperty("value", 600)
        self.maxSize.setDisplayIntegerBase(10)
        self.maxSize.setObjectName("maxSize")
        self.gridLayout.addWidget(self.maxSize, 5, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.groupProcess)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 5, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.groupProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 6, 0, 1, 1)
        self.linkTol = QtWidgets.QDoubleSpinBox(self.groupProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.linkTol.sizePolicy().hasHeightForWidth())
        self.linkTol.setSizePolicy(sizePolicy)
        self.linkTol.setPrefix("")
        self.linkTol.setDecimals(1)
        self.linkTol.setProperty("value", 5.0)
        self.linkTol.setObjectName("linkTol")
        self.gridLayout.addWidget(self.linkTol, 6, 1, 1, 1)
        self.verticalLayout.addWidget(self.groupProcess)
        self.groupPipeline = QtWidgets.QGroupBox(QVisionWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupPipeline.sizePolicy().hasHeightForWidth())
        self.groupPipeline.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.groupPipeline.setFont(font)
        self.groupPipeline.setObjectName("groupPipeline")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupPipeline)
        self.horizontalLayout.setContentsMargins(6, 2, 2, 2)
        self.horizontalLayout.setSpacing(2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.bDetect = QtWidgets.QCheckBox(self.groupPipeline)
        self.bDetect.setObjectName("bDetect")
        self.horizontalLayout.addWidget(self.bDetect)
        self.bEstimate = QtWidgets.QCheckBox(self.groupPipeline)
        self.bEstimate.setObjectName("bEstimate")
        self.horizontalLayout.addWidget(self.bEstimate)
        self.bRefine = QtWidgets.QCheckBox(self.groupPipeline)
        self.bRefine.setObjectName("bRefine")
        self.horizontalLayout.addWidget(self.bRefine)
        self.verticalLayout.addWidget(self.groupPipeline)
        self.groupExport = QtWidgets.QGroupBox(QVisionWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupExport.sizePolicy().hasHeightForWidth())
        self.groupExport.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.groupExport.setFont(font)
        self.groupExport.setObjectName("groupExport")
        self.formLayout_2 = QtWidgets.QFormLayout(self.groupExport)
        self.formLayout_2.setContentsMargins(6, 2, 2, 2)
        self.formLayout_2.setHorizontalSpacing(12)
        self.formLayout_2.setVerticalSpacing(2)
        self.formLayout_2.setObjectName("formLayout_2")
        self.saveFrames = QtWidgets.QCheckBox(self.groupExport)
        self.saveFrames.setChecked(False)
        self.saveFrames.setTristate(False)
        self.saveFrames.setObjectName("saveFrames")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.saveFrames)
        self.saveTrajectories = QtWidgets.QCheckBox(self.groupExport)
        self.saveTrajectories.setObjectName("saveTrajectories")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.saveTrajectories)
        self.saveFeatureData = QtWidgets.QCheckBox(self.groupExport)
        self.saveFeatureData.setObjectName("saveFeatureData")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.saveFeatureData)
        self.verticalLayout.addWidget(self.groupExport)
        self.plot2 = PlotWidget(QVisionWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.plot2.sizePolicy().hasHeightForWidth())
        self.plot2.setSizePolicy(sizePolicy)
        self.plot2.setObjectName("plot2")
        self.verticalLayout.addWidget(self.plot2)
        self.plot1 = PlotWidget(QVisionWidget)
        self.plot1.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.plot1.sizePolicy().hasHeightForWidth())
        self.plot1.setSizePolicy(sizePolicy)
        self.plot1.setStatusTip("")
        self.plot1.setObjectName("plot1")
        self.verticalLayout.addWidget(self.plot1)

        self.retranslateUi(QVisionWidget)
        QtCore.QMetaObject.connectSlotsByName(QVisionWidget)

    def retranslateUi(self, QVisionWidget):
        _translate = QtCore.QCoreApplication.translate
        QVisionWidget.setWindowTitle(_translate("QVisionWidget", "Form"))
        self.groupProcess.setTitle(_translate("QVisionWidget", "Processing"))
        self.label_2.setStatusTip(_translate("QVisionWidget", "Skip intermediate frames to reduce latency"))
        self.label_2.setText(_translate("QVisionWidget", "Skip "))
        self.nskip.setStatusTip(_translate("QVisionWidget", "Skip intermediate frames to reduce latency"))
        self.nskip.setSuffix(_translate("QVisionWidget", " frames"))
        self.realTime.setStatusTip(_translate("QVisionWidget", "Process data in real-time"))
        self.realTime.setText(_translate("QVisionWidget", "Real-time"))
        self.postProcess.setStatusTip(_translate("QVisionWidget", "Process data after recording video"))
        self.postProcess.setText(_translate("QVisionWidget", "Post-process"))
        self.label_3.setStatusTip(_translate("QVisionWidget", "Confidence threshold for detections. Throw away features detected below this confidence."))
        self.label_3.setText(_translate("QVisionWidget", "Confidence"))
        self.confidence.setStatusTip(_translate("QVisionWidget", "Confidence threshold for detections. Throw away features detected below this confidence."))
        self.confidence.setSuffix(_translate("QVisionWidget", " %"))
        self.maxSize.setStatusTip(_translate("QVisionWidget", "Maximum edge length that is considered a detection. Useful for real-time processing and eliminating artifacts."))
        self.maxSize.setSuffix(_translate("QVisionWidget", " pixels"))
        self.label_4.setStatusTip(_translate("QVisionWidget", "Maximum edge length that is considered a detection. Useful for real-time processing and eliminating artifacts."))
        self.label_4.setText(_translate("QVisionWidget", "Maximum size"))
        self.label.setStatusTip(_translate("QVisionWidget", "Maximum distance features can move between frames in order to be linked to the same Trajectory"))
        self.label.setText(_translate("QVisionWidget", "Search range"))
        self.linkTol.setStatusTip(_translate("QVisionWidget", "Maximum distance features can move between frames in order to be linked to the same Trajectory."))
        self.linkTol.setSuffix(_translate("QVisionWidget", " pixels"))
        self.groupPipeline.setTitle(_translate("QVisionWidget", "Analysis pipeline"))
        self.bDetect.setStatusTip(_translate("QVisionWidget", "Deep neural network (x, y) feature detection"))
        self.bDetect.setText(_translate("QVisionWidget", "Detect"))
        self.bEstimate.setStatusTip(_translate("QVisionWidget", "Deep neural network (x, y, z) feature detection and holographic characterization"))
        self.bEstimate.setText(_translate("QVisionWidget", "Estimate"))
        self.bRefine.setStatusTip(_translate("QVisionWidget", "Deep neural network pipeline with precision holographic characterization"))
        self.bRefine.setText(_translate("QVisionWidget", "Refine"))
        self.groupExport.setStatusTip(_translate("QVisionWidget", "See https://github.com/davidgrier/pylorenzmie for Video, Frame, Trajectory, and Feature documentation"))
        self.groupExport.setTitle(_translate("QVisionWidget", "Save"))
        self.saveFrames.setStatusTip(_translate("QVisionWidget", "Export Frames from video recordings"))
        self.saveFrames.setText(_translate("QVisionWidget", "Frames"))
        self.saveTrajectories.setStatusTip(_translate("QVisionWidget", "Export Trajectories from video recordings"))
        self.saveTrajectories.setText(_translate("QVisionWidget", "Trajectories"))
        self.saveFeatureData.setStatusTip(_translate("QVisionWidget", "Save cropped Feature data when exporting Frames and/or Trajectories"))
        self.saveFeatureData.setText(_translate("QVisionWidget", "Feature data"))

from pyqtgraph import PlotWidget

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    QVisionWidget = QtWidgets.QWidget()
    ui = Ui_QVisionWidget()
    ui.setupUi(QVisionWidget)
    QVisionWidget.show()
    sys.exit(app.exec_())

